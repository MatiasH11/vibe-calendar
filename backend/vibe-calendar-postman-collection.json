{
  "info": {
    "name": "Vibe Calendar API",
    "description": "**Vibe Calendar** is a modern employee shift management system that enables companies to efficiently plan weekly shifts, manage employees and roles, and track work patterns with an intuitive interface.\n\n## Features\n- üîê JWT-based authentication\n- üë• Multi-tenant company management\n- üìÖ Advanced shift scheduling with conflict detection\n- üìä Pattern learning for smart shift suggestions\n- üìã Reusable shift templates\n- üéØ Role-based access control\n- üìù Comprehensive audit logging\n\n## Base URL\nAll API endpoints are prefixed with `/api/v1`\n\n## Authentication\nMost endpoints require authentication via JWT Bearer token. Obtain a token by logging in via `/auth/login`.\n\nInclude the token in requests as:\n```\nAuthorization: Bearer <your-jwt-token>\n```\n\n## Rate Limiting\n- **Auth endpoints**: 5 requests / 15 minutes\n- **Bulk operations**: 10 requests / minute\n- **General API**: 100 requests / minute\n\n## Response Format\nAll responses follow a standard format:\n\n**Success Response:**\n```json\n{\n  \"success\": true,\n  \"data\": { ... }\n}\n```\n\n**Error Response:**\n```json\n{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"ERROR_CODE\",\n    \"message\": \"Human-readable message\",\n    \"metadata\": { ... }\n  }\n}\n```\n\n## Time Handling - UTC ONLY\n- All time values are in **UTC format** (HH:mm, e.g., \"14:30\")\n- Frontend is responsible for timezone conversions\n- Backend NEVER performs timezone conversions\n- Dates are in ISO 8601 format (YYYY-MM-DD)\n\n## Common Use Cases\n\n### 1. Creating a New Company and Admin\n```\nPOST /auth/register\n‚Üí Returns JWT token\n‚Üí Use token for all subsequent requests\n```\n\n### 2. Adding Employees to Shifts\n```\n1. POST /employees (create employee)\n2. POST /roles (optional: create custom role)\n3. POST /shifts (assign shift to employee)\n```\n\n### 3. Bulk Shift Management\n```\n1. POST /shifts/validate-conflicts (check for conflicts)\n2. POST /shifts/bulk-create (create multiple shifts)\n3. DELETE /shifts/bulk (delete multiple shifts)\n```\n\n### 4. Using Shift Templates\n```\n1. POST /shift-templates (create reusable template)\n2. GET /shifts/suggestions (get AI-powered suggestions)\n3. POST /shifts (use template to create shift)\n```\n",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001/api/v1",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "Health check endpoint",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "health"
              ]
            },
            "description": "Check the health status of the API and its dependencies (database, memory, uptime)",
            "auth": {
              "type": "noauth"
            }
          },
          "response": [
            {
              "name": "200 - System is healthy",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/health",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "health"
                  ]
                },
                "description": "Check the health status of the API and its dependencies (database, memory, uptime)",
                "auth": {
                  "type": "noauth"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"ok\",\n  \"timestamp\": \"2025-10-18T12:00:00Z\",\n  \"uptime\": 86400,\n  \"services\": {\n    \"api\": \"up\",\n    \"database\": \"up\"\n  },\n  \"memory\": {\n    \"used\": 150,\n    \"total\": 512,\n    \"unit\": \"MB\"\n  }\n}"
            },
            {
              "name": "500 - Database connection failed",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/health",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "health"
                  ]
                },
                "description": "Check the health status of the API and its dependencies (database, memory, uptime)",
                "auth": {
                  "type": "noauth"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": \"degraded\",\n  \"timestamp\": \"2025-10-18T12:00:00Z\",\n  \"uptime\": 3600,\n  \"services\": {\n    \"api\": \"up\",\n    \"database\": \"down\"\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register new company and admin user",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            },
            "description": "Creates a new company along with its first admin user in a single transaction.\nThis is the initial registration endpoint for new organizations.\n\n**Rate Limit:** 5 requests / 15 minutes\n\n**Common Errors:**\n- `EMAIL_ALREADY_EXISTS` (409) - Email is already registered\n- `COMPANY_NAME_ALREADY_EXISTS` (409) - Company name is taken\n- `VALIDATION_ERROR` (400) - Invalid input data\n- `TRANSACTION_FAILED` (500) - Database error during registration\n",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"company_name\": \"Acme Corp\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john@acme.com\",\n  \"password\": \"SecurePass123!\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth"
            }
          },
          "response": [
            {
              "name": "201 - success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/auth/register",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "auth",
                    "register"
                  ]
                },
                "description": "Creates a new company along with its first admin user in a single transaction.\nThis is the initial registration endpoint for new organizations.\n\n**Rate Limit:** 5 requests / 15 minutes\n\n**Common Errors:**\n- `EMAIL_ALREADY_EXISTS` (409) - Email is already registered\n- `COMPANY_NAME_ALREADY_EXISTS` (409) - Company name is taken\n- `VALIDATION_ERROR` (400) - Invalid input data\n- `TRANSACTION_FAILED` (500) - Database error during registration\n",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company_name\": \"Acme Corp\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john@acme.com\",\n  \"password\": \"SecurePass123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "noauth"
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"company_id\": 1,\n    \"user_id\": 1,\n    \"employee_id\": 1,\n    \"role_id\": 1\n  }\n}"
            },
            {
              "name": "409 - Email already registered",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/auth/register",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "auth",
                    "register"
                  ]
                },
                "description": "Creates a new company along with its first admin user in a single transaction.\nThis is the initial registration endpoint for new organizations.\n\n**Rate Limit:** 5 requests / 15 minutes\n\n**Common Errors:**\n- `EMAIL_ALREADY_EXISTS` (409) - Email is already registered\n- `COMPANY_NAME_ALREADY_EXISTS` (409) - Company name is taken\n- `VALIDATION_ERROR` (400) - Invalid input data\n- `TRANSACTION_FAILED` (500) - Database error during registration\n",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company_name\": \"Acme Corp\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john@acme.com\",\n  \"password\": \"SecurePass123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "noauth"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"EMAIL_ALREADY_EXISTS\",\n    \"message\": \"A user with this email already exists\",\n    \"metadata\": {\n      \"email\": \"john@acme.com\"\n    }\n  }\n}"
            },
            {
              "name": "409 - Company name taken",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/auth/register",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "auth",
                    "register"
                  ]
                },
                "description": "Creates a new company along with its first admin user in a single transaction.\nThis is the initial registration endpoint for new organizations.\n\n**Rate Limit:** 5 requests / 15 minutes\n\n**Common Errors:**\n- `EMAIL_ALREADY_EXISTS` (409) - Email is already registered\n- `COMPANY_NAME_ALREADY_EXISTS` (409) - Company name is taken\n- `VALIDATION_ERROR` (400) - Invalid input data\n- `TRANSACTION_FAILED` (500) - Database error during registration\n",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"company_name\": \"Acme Corp\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john@acme.com\",\n  \"password\": \"SecurePass123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "noauth"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"COMPANY_NAME_ALREADY_EXISTS\",\n    \"message\": \"A company with this name already exists\",\n    \"metadata\": {\n      \"companyName\": \"Acme Corp\"\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "Login with credentials",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            },
            "description": "Authenticate a user and receive a JWT token for subsequent requests.\nThe token should be included in the `Authorization` header as `Bearer <token>`.\n\n**Token Validity:** 8 hours\n**Rate Limit:** 5 requests / 15 minutes\n\n**Common Errors:**\n- `INVALID_CREDENTIALS` (401) - Wrong email or password\n- `USER_NOT_ASSOCIATED_WITH_COMPANY` (403) - User has no company\n- `VALIDATION_ERROR` (400) - Invalid email format or missing fields\n",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@company.com\",\n  \"password\": \"SecurePass123!\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth"
            }
          },
          "response": [
            {
              "name": "200 - success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/auth/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "auth",
                    "login"
                  ]
                },
                "description": "Authenticate a user and receive a JWT token for subsequent requests.\nThe token should be included in the `Authorization` header as `Bearer <token>`.\n\n**Token Validity:** 8 hours\n**Rate Limit:** 5 requests / 15 minutes\n\n**Common Errors:**\n- `INVALID_CREDENTIALS` (401) - Wrong email or password\n- `USER_NOT_ASSOCIATED_WITH_COMPANY` (403) - User has no company\n- `VALIDATION_ERROR` (400) - Invalid email format or missing fields\n",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"admin@company.com\",\n  \"password\": \"SecurePass123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "noauth"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJhZG1pbl9jb21wYW55X2lkIjoxLCJ1c2VyX3R5cGUiOiJhZG1pbiJ9.SIGNATURE\"\n  }\n}"
            },
            {
              "name": "401 - Wrong email or password",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/auth/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "auth",
                    "login"
                  ]
                },
                "description": "Authenticate a user and receive a JWT token for subsequent requests.\nThe token should be included in the `Authorization` header as `Bearer <token>`.\n\n**Token Validity:** 8 hours\n**Rate Limit:** 5 requests / 15 minutes\n\n**Common Errors:**\n- `INVALID_CREDENTIALS` (401) - Wrong email or password\n- `USER_NOT_ASSOCIATED_WITH_COMPANY` (403) - User has no company\n- `VALIDATION_ERROR` (400) - Invalid email format or missing fields\n",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"admin@company.com\",\n  \"password\": \"SecurePass123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "noauth"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"INVALID_CREDENTIALS\",\n    \"message\": \"Invalid email or password\"\n  }\n}"
            },
            {
              "name": "403 - User has no company association",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/auth/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "auth",
                    "login"
                  ]
                },
                "description": "Authenticate a user and receive a JWT token for subsequent requests.\nThe token should be included in the `Authorization` header as `Bearer <token>`.\n\n**Token Validity:** 8 hours\n**Rate Limit:** 5 requests / 15 minutes\n\n**Common Errors:**\n- `INVALID_CREDENTIALS` (401) - Wrong email or password\n- `USER_NOT_ASSOCIATED_WITH_COMPANY` (403) - User has no company\n- `VALIDATION_ERROR` (400) - Invalid email format or missing fields\n",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"admin@company.com\",\n  \"password\": \"SecurePass123!\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "noauth"
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"USER_NOT_ASSOCIATED_WITH_COMPANY\",\n    \"message\": \"User is not associated with any company\",\n    \"metadata\": {\n      \"userId\": 5\n    }\n  }\n}"
            }
          ]
        }
      ]
    }
  ]
}